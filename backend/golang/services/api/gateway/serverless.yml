service: listbackup-api-gateway

frameworkVersion: '4'

provider:
  name: aws
  runtime: provided.al2023
  region: us-west-2
  stage: ${opt:stage, 'dev'}
  environment:
    STAGE: ${self:provider.stage}
    # Cognito configuration from infrastructure-cognito service
    COGNITO_USER_POOL_ID: ${cf:listbackup-infrastructure-cognito-${self:provider.stage}.CognitoUserPoolId}
    COGNITO_CLIENT_ID: ${cf:listbackup-infrastructure-cognito-${self:provider.stage}.CognitoUserPoolClientId}
    COGNITO_CLIENT_SECRET: ""  # No secret for public client
    COGNITO_REGION: ${self:provider.region}
    COGNITO_JWKS_URI: ${cf:listbackup-infrastructure-cognito-${self:provider.stage}.CognitoJwksUri}
    COGNITO_ISSUER: ${cf:listbackup-infrastructure-cognito-${self:provider.stage}.CognitoIssuer}
    # DynamoDB table references from infrastructure-dynamodb service
    DYNAMODB_TABLE_PREFIX: listbackup-${self:provider.stage}
    USERS_TABLE_NAME: ${cf:listbackup-infrastructure-dynamodb-${self:provider.stage}.UsersTableName}
    ACCOUNTS_TABLE_NAME: ${cf:listbackup-infrastructure-dynamodb-${self:provider.stage}.AccountsTableName}
    USER_ACCOUNTS_TABLE_NAME: ${cf:listbackup-infrastructure-dynamodb-${self:provider.stage}.UserAccountsTableName}
    ACTIVITY_TABLE_NAME: ${cf:listbackup-infrastructure-dynamodb-${self:provider.stage}.ActivityTableName}
    # S3 bucket references from infrastructure-s3 service
    DATA_BUCKET_NAME: ${cf:listbackup-infrastructure-s3-${self:provider.stage}.DataBucketName}
    # API configuration
    API_VERSION: v1
    API_REFERENCE: listbackup-api-gateway
  deploymentBucket:
    blockPublicAccess: true
  httpApi:
    cors:
      allowOrigins:
        - '*'
      allowHeaders:
        - Content-Type
        - Authorization
        - X-Amz-Date
        - X-Api-Key
        - X-Amz-Security-Token
      allowMethods:
        - GET
        - POST
        - PUT
        - DELETE
        - OPTIONS
      maxAge: 86400
    authorizers:
      cognitoAuthorizer:
        type: jwt
        identitySource:
          - $request.header.Authorization
        issuerUrl: ${cf:listbackup-infrastructure-cognito-${self:provider.stage}.CognitoIssuer}
        audience:
          - ${cf:listbackup-infrastructure-cognito-${self:provider.stage}.CognitoUserPoolClientId}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - apigateway:GET
            - apigateway:POST
          Resource:
            - "arn:aws:apigateway:${self:provider.region}::/apis/*"
        # Comprehensive DynamoDB permissions with wildcards
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:BatchGetItem
            - dynamodb:BatchWriteItem
            - dynamodb:ConditionCheckItem
            - dynamodb:DescribeTable
            - dynamodb:CreateTable
            - dynamodb:ListTables
            - dynamodb:DescribeTimeToLive
            - dynamodb:UpdateTimeToLive
            - dynamodb:TagResource
            - dynamodb:UntagResource
            - dynamodb:ListTagsOfResource
            - dynamodb:DescribeStream
            - dynamodb:GetRecords
            - dynamodb:GetShardIterator
            - dynamodb:ListStreams
            - dynamodb:DescribeLimits
            - dynamodb:DescribeBackup
            - dynamodb:ListBackups
          Resource:
            - "arn:aws:dynamodb:${self:provider.region}:*:table/listbackup-${self:provider.stage}-*"
            - "arn:aws:dynamodb:${self:provider.region}:*:table/listbackup-${self:provider.stage}-*/index/*"
            - "arn:aws:dynamodb:${self:provider.region}:*:table/listbackup-${self:provider.stage}-*/stream/*"
            - "arn:aws:dynamodb:${self:provider.region}:*:table/listbackup-${self:provider.stage}-*/backup/*"
        # Additional DynamoDB permissions for account-level operations
        - Effect: Allow
          Action:
            - dynamodb:ListTables
            - dynamodb:DescribeLimits
          Resource: "*"
        # S3 permissions for data bucket access
        - Effect: Allow
          Action:
            - s3:GetObject
            - s3:PutObject
            - s3:DeleteObject
            - s3:ListBucket
          Resource:
            - ${cf:listbackup-infrastructure-s3-${self:provider.stage}.DataBucketArn}
            - "${cf:listbackup-infrastructure-s3-${self:provider.stage}.DataBucketArn}/*"

package:
  individually: true

functions:
  # Minimal health endpoint to create HttpApi
  health:
    handler: index.handler
    runtime: nodejs20.x
    description: Check the health status of the API
    events:
      - httpApi:
          path: /health
          method: get

resources:
  Resources:
    # Custom Domain Name for HTTP API - Stage-specific subdomain
    ApiDomainName:
      Type: AWS::ApiGatewayV2::DomainName
      Properties:
        DomainName: ${self:provider.stage}.api.listbackup.ai
        DomainNameConfigurations:
          - CertificateArn: ${cf:listbackup-infrastructure-domains-${self:provider.stage}.SSLCertificateArn}
            CertificateName: '*.api.listbackup.ai'
            EndpointType: REGIONAL
            SecurityPolicy: TLS_1_2

    # API Mapping to connect domain to API
    ApiMapping:
      Type: AWS::ApiGatewayV2::ApiMapping
      DependsOn: ApiDomainName
      Properties:
        ApiId:
          Ref: HttpApi
        DomainName: ${self:provider.stage}.api.listbackup.ai
        Stage: $default

    # Route53 A Record for the custom domain
    ApiDomainRecord:
      Type: AWS::Route53::RecordSet
      Properties:
        HostedZoneId: Z01040453V93CTQT4QFNW  # listbackup.ai hosted zone
        Name: ${self:provider.stage}.api.listbackup.ai
        Type: A
        AliasTarget:
          DNSName: 
            Fn::GetAtt: ApiDomainName.RegionalDomainName
          HostedZoneId: 
            Fn::GetAtt: ApiDomainName.RegionalHostedZoneId

  Outputs:
    HttpApiId:
      Description: "HTTP API Gateway ID"
      Value:
        Ref: HttpApi
      Export:
        Name: ${self:service}-${self:provider.stage}-HttpApiId
    HttpApiEndpoint:
      Description: "HTTP API Gateway Endpoint"
      Value:
        Fn::Join:
          - ''
          - - 'https://'
            - Ref: HttpApi
            - '.execute-api.'
            - ${self:provider.region}
            - '.amazonaws.com'
      Export:
        Name: ${self:service}-${self:provider.stage}-HttpApiEndpoint
    CustomDomainEndpoint:
      Description: "Custom Domain Endpoint"
      Value: https://${self:provider.stage}.api.listbackup.ai
      Export:
        Name: ${self:service}-${self:provider.stage}-CustomDomainEndpoint
    CognitoAuthorizerId:
      Description: "Cognito JWT Authorizer ID"
      Value:
        Ref: HttpApiAuthorizerCognitoAuthorizer
      Export:
        Name: ${self:service}-${self:provider.stage}-CognitoAuthorizerId

