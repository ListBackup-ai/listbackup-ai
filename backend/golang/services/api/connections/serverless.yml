service: listbackup-connections

provider:
  name: aws
  profile: listbackup.ai
  runtime: provided.al2023
  region: us-west-2
  stage: ${opt:stage, 'main'}
  memorySize: 512
  timeout: 30
  tracing:
    lambda: true
  httpApi:
    id: ${cf:listbackup-api-gateway-main.HttpApiId}
  environment:
    STAGE: ${self:provider.stage}
    COGNITO_USER_POOL_ID: ${ssm:/cognito-user-pool-id}
    COGNITO_CLIENT_ID: ${ssm:/cognito-client-id}
    COGNITO_CLIENT_SECRET: ${ssm:/cognito-client-secret}
    COGNITO_REGION: ${ssm:/cognito-region}
    COGNITO_JWKS_URI: ${ssm:/cognito-jwks-uri}
    COGNITO_ISSUER: ${ssm:/cognito-issuer}
    DYNAMODB_TABLE_PREFIX: listbackup-${self:provider.stage}
    API_VERSION: v1
    API_REFERENCE: listbackup-api
    PLATFORM_CONNECTIONS_TABLE: ${cf:listbackup-infrastructure-dynamodb-main.PlatformConnectionsTableName}
    PLATFORMS_TABLE: ${cf:listbackup-infrastructure-dynamodb-main.PlatformsTableName}
    USERS_TABLE: ${cf:listbackup-infrastructure-dynamodb-main.UsersTableName}
    ACCOUNTS_TABLE: ${cf:listbackup-infrastructure-dynamodb-main.AccountsTableName}
  iam:
    role:
      statements:
        # Comprehensive DynamoDB permissions with wildcards
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:BatchGetItem
            - dynamodb:BatchWriteItem
            - dynamodb:ConditionCheckItem
            - dynamodb:DescribeTable
            - dynamodb:CreateTable
            - dynamodb:ListTables
            - dynamodb:DescribeTimeToLive
            - dynamodb:UpdateTimeToLive
            - dynamodb:TagResource
            - dynamodb:UntagResource
            - dynamodb:ListTagsOfResource
            - dynamodb:DescribeStream
            - dynamodb:GetRecords
            - dynamodb:GetShardIterator
            - dynamodb:ListStreams
            - dynamodb:DescribeLimits
            - dynamodb:DescribeBackup
            - dynamodb:ListBackups
          Resource:
            - "arn:aws:dynamodb:${self:provider.region}:*:table/listbackup-${self:provider.stage}-*"
            - "arn:aws:dynamodb:${self:provider.region}:*:table/listbackup-${self:provider.stage}-*/index/*"
            - "arn:aws:dynamodb:${self:provider.region}:*:table/listbackup-${self:provider.stage}-*/stream/*"
            - "arn:aws:dynamodb:${self:provider.region}:*:table/listbackup-${self:provider.stage}-*/backup/*"
        # Additional DynamoDB permissions for account-level operations
        - Effect: Allow
          Action:
            - dynamodb:ListTables
            - dynamodb:DescribeLimits
          Resource: "*"

package:
  individually: true

functions:
  # Connection endpoints
  listConnections:
    handler: bootstrap
    description: Retrieve all platform connections for the authenticated user
    package:
      artifact: bin/connections-list.zip
    events:
      - httpApi:
          path: /connections
          method: GET
          authorizer:
            type: jwt
            id: ${cf:listbackup-api-gateway-main.CognitoAuthorizerId}

  createConnection:
    handler: bootstrap
    description: Create a new connection to a platform using OAuth or API credentials
    package:
      artifact: bin/connections-create.zip
    events:
      - httpApi:
          path: /connections
          method: POST
          authorizer:
            type: jwt
            id: ${cf:listbackup-api-gateway-main.CognitoAuthorizerId}

  getConnection:
    handler: bootstrap
    description: Retrieve details of a specific platform connection
    package:
      artifact: bin/connections-get.zip
    events:
      - httpApi:
          path: /connections/{connectionId}
          method: GET
          authorizer:
            type: jwt
            id: ${cf:listbackup-api-gateway-main.CognitoAuthorizerId}

  updateConnection:
    handler: bootstrap
    description: Update the settings or configuration of a platform connection
    package:
      artifact: bin/connections-update.zip
    events:
      - httpApi:
          path: /connections/{connectionId}
          method: PUT
          authorizer:
            type: jwt
            id: ${cf:listbackup-api-gateway-main.CognitoAuthorizerId}

  deleteConnection:
    handler: bootstrap
    description: Remove a platform connection and all associated data sources
    package:
      artifact: bin/connections-delete.zip
    events:
      - httpApi:
          path: /connections/{connectionId}
          method: DELETE
          authorizer:
            type: jwt
            id: ${cf:listbackup-api-gateway-main.CognitoAuthorizerId}

  testConnection:
    handler: bootstrap
    description: Test a platform connection to verify it's working properly
    package:
      artifact: bin/connections-test.zip
    events:
      - httpApi:
          path: /connections/{connectionId}/test
          method: POST
          authorizer:
            type: jwt
            id: ${cf:listbackup-api-gateway-main.CognitoAuthorizerId}
