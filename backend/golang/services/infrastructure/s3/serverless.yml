service: listbackup-infrastructure-s3

frameworkVersion: '4'

provider:
  name: aws
  profile: listbackup.ai
  runtime: provided.al2023
  region: us-west-2
  stage: ${opt:stage, 'main'}
  deploymentBucket:
    blockPublicAccess: true

# No functions - this is infrastructure only
functions: {}

resources:
  Description: "S3 bucket infrastructure for ListBackup.ai - primary data storage"
  
  Resources:
    # Primary data storage bucket
    DataBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: {"Fn::Sub": "listbackup-data-${self:provider.stage}-${AWS::AccountId}-${AWS::Region}"}
        VersioningConfiguration:
          Status: Enabled
        BucketEncryption:
          ServerSideEncryptionConfiguration:
            - ServerSideEncryptionByDefault:
                SSEAlgorithm: AES256
        PublicAccessBlockConfiguration:
          BlockPublicAcls: true
          BlockPublicPolicy: true
          IgnorePublicAcls: true
          RestrictPublicBuckets: true
        LifecycleConfiguration:
          Rules:
            - Id: LifecycleRule
              Status: Enabled
              Transitions:
                - TransitionInDays: 30
                  StorageClass: STANDARD_IA
                - TransitionInDays: 90
                  StorageClass: GLACIER
                - TransitionInDays: 365
                  StorageClass: DEEP_ARCHIVE
              NoncurrentVersionTransitions:
                - TransitionInDays: 30
                  StorageClass: STANDARD_IA
                - TransitionInDays: 90
                  StorageClass: GLACIER
              NoncurrentVersionExpirationInDays: 730
        Tags:
          - Key: Service
            Value: listbackup-infrastructure-s3
          - Key: Stage
            Value: ${self:provider.stage}
          - Key: Purpose
            Value: Primary data storage
          - Key: DataClassification
            Value: Customer-Data

    # S3 bucket policy for secure access
    DataBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: {"Ref": "DataBucket"}
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            # Deny insecure connections
            - Sid: DenyInsecureConnections
              Effect: Deny
              Principal: "*"
              Action: "s3:*"
              Resource:
                - {"Fn::Sub": "arn:aws:s3:::${DataBucket}/*"}
                - {"Fn::Sub": "arn:aws:s3:::${DataBucket}"}
              Condition:
                Bool:
                  "aws:SecureTransport": "false"
            
            # Allow CloudTrail access for auditing
            - Sid: AllowCloudTrailAccess
              Effect: Allow
              Principal:
                Service: cloudtrail.amazonaws.com
              Action:
                - s3:GetBucketAcl
              Resource:
                - {"Fn::Sub": "arn:aws:s3:::${DataBucket}"}
            
            - Sid: AllowCloudTrailPutObject
              Effect: Allow
              Principal:
                Service: cloudtrail.amazonaws.com
              Action:
                - s3:PutObject
              Resource:
                - {"Fn::Sub": "arn:aws:s3:::${DataBucket}/cloudtrail/*"}
              Condition:
                StringEquals:
                  "s3:x-amz-acl": "bucket-owner-full-control"

    # CloudWatch log group for S3 access logging
    S3AccessLogGroup:
      Type: AWS::Logs::LogGroup
      Properties:
        LogGroupName: {"Fn::Sub": "/aws/s3/${AWS::StackName}"}
        RetentionInDays: 30
        Tags:
          - Key: Service
            Value: listbackup-infrastructure-s3
          - Key: Stage
            Value: ${self:provider.stage}

  # CloudFormation Outputs - Export bucket information for other services
  Outputs:
    DataBucketName:
      Description: Primary data storage bucket name
      Value: {"Ref": "DataBucket"}
      Export:
        Name: ${self:service}-${self:provider.stage}-DataBucketName

    DataBucketArn:
      Description: Primary data storage bucket ARN
      Value: {"Fn::GetAtt": ["DataBucket", "Arn"]}
      Export:
        Name: ${self:service}-${self:provider.stage}-DataBucketArn

    DataBucketDomainName:
      Description: Primary data storage bucket domain name
      Value: {"Fn::GetAtt": ["DataBucket", "DomainName"]}
      Export:
        Name: ${self:service}-${self:provider.stage}-DataBucketDomainName

    DataBucketRegionalDomainName:
      Description: Primary data storage bucket regional domain name
      Value: {"Fn::GetAtt": ["DataBucket", "RegionalDomainName"]}
      Export:
        Name: ${self:service}-${self:provider.stage}-DataBucketRegionalDomainName

    S3AccessLogGroupName:
      Description: S3 access log group name
      Value: {"Ref": "S3AccessLogGroup"}
      Export:
        Name: ${self:service}-${self:provider.stage}-S3AccessLogGroupName

    S3AccessLogGroupArn:
      Description: S3 access log group ARN
      Value: {"Fn::GetAtt": ["S3AccessLogGroup", "Arn"]}
      Export:
        Name: ${self:service}-${self:provider.stage}-S3AccessLogGroupArn